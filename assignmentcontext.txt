Take-Home Exam - Solution Engineering
Objective: Thanks for taking the time to work on this take-home. Our goal is to
assess your technical problem-solving skills, your ability to work with the Dynamic
SDK, and how you communicate in a customer-facing role. If anything is unclear, feel
free to reach out with questions - we’re happy to help.
Section 1: Demo and Responding to a customer
You received the following message from Jeff, a representative from a large enterprise
prospect currently evaluating Dynamic:
Message from Jeff:
My team heard some great things about Dynamic, but we have quite a bit of issues (see
the note below that I got from my team). We would really like some guidance on how to
approach these. A demo app would help! Can you build us one, please? This
would allow us to evaluate how easy it is to use Dynamic while we are still evaluating
you.
Issues:
1. 2. 3. They need to mint NFTs using Dynamic's embedded wallet.
They want to be able to offer their service on as many chains as Dynamic can
offer.
They do not understand how account abstraction with Dynamic works, but it
sounds like a good idea because…what are gas fees?! (Their end users probably
do not know, either.)
Confidential - for recruiting purposes only
4. 5. They want to make sure user security is clear and that users can add additional
security to their account.
They want it to be really clear how to send money.
Task:
Your task is to create a demo app/environment that addresses the issues mentioned by
Jeff's team. The demo should be functional, easy to understand, and something the
customer can reference as they evaluate Dynamic.
Instructions:
1. 2. Set up the Dynamic SDK locally in a React application.
Develop solutions to address each of the issues mentioned:
a. b. Explain account abstraction and how it handles gas fees.
Implement and demonstrate adding MFA or other security for users.
c. Explain how it works.
Deliverables:
1. 2. A functional demo environment that addresses the customer’s concerns.
A short recorded Loom video demonstrating how the demo works and
explaining key aspects to Jeff, the customer.
Instructions:
Submit your code changes via a GitHub repository (please include clear commit
messages).
●
●
Include a README file explaining the setup process, the issues, and how you
addressed them.
Prepare a live demo you could walk the team through on a panel
Confidential - for recruiting purposes only
Section 2: Communication
Draft a technical response message to this customer. The message should be
informative, friendly, and tailored for a technical audience. The message should be
drafted like you would be sending it in Slack as that is the primary form of
communication we use. It should include any relevant material from the demo or other
places you suggest would be valuable
Deliverables:
1. A concise, professional message that highlights key information the customer
2. needs.
FAQs Prepare a list of questions and answers that you believe would be helpful
for Jeff as he goes deeper with our product. This can be based on your learnings
from using the product.
Section 3: Efficiency and Process
Draft a very brief write up (paragraph with a few bullets) of how you would go about
expediting your next set of customers - whether that would be using specific AI tools;
building sample apps etc.
What are 3 things you would do to ensure you make the next set of customers have a
better experience and a more efficient process?